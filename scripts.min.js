"use strict";function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}const getRandomInt=(e,t)=>(e=Math.ceil(e),t=Math.ceil(t),Math.floor(Math.random()*(t-e))+e),getRandomDirection=(e=["left","right","up","down"])=>e[getRandomInt(0,e.length)],playExplosionSound=()=>{const e=document.createElement("audio");e.src="./sounds/explosion.wav",e.play().then(),e.volume=.05},playBombLeaveSound=()=>{const e=document.createElement("audio");e.src="./sounds/leave-bomb.wav",e.play().then(),e.volume=.05};class Timer{constructor(e,t){this.callback=e,this.remaining=t,this.resume()}pause(){clearTimeout(this.timerID),this.remaining-=(new Date).getTime()-this.start}resume(){this.start=(new Date).getTime(),this.clear(),this.timerID=setTimeout(this.callback,this.remaining)}clear(){clearTimeout(this.timerID)}}class Entity{constructor({board:e,pixelSize:t,left:i,top:s,speed:o}){_defineProperty(this,"createHTML",()=>{this.div=document.createElement("div"),this.div.style.position="absolute",this.img=document.createElement("img"),this.div.append(this.img),this.board.append(this.div),this.div.style.height=`${this.size}px`,this.div.style.width=`${this.size}px`}),this.board=e,this.pixelSize=t,this.speed=o||t/3,this.left=i||2*t,this.top=s||2*t,this.size=16*t*.75,this.createHTML(),this.draw()}moveLeft(){this.left-=this.speed}moveRight(){this.left+=this.speed}moveUp(){this.top-=this.speed}moveDown(){this.top+=this.speed}draw(){this.div.style.position="absolute",this.div.style.left=`${16*this.pixelSize+this.left}px`,this.div.style.top=`${16*this.pixelSize+this.top}px`}getBorders(e,t,{own:i=!0,collideWithDoor:s=!1}={}){let o=0;i||(o=1),s&&(o-=8*e);let r=(this.left-o+(e+1))/t+2,n=(this.left-1+o+this.size-(e+1))/t+2,a=(this.top-o)/t+2,h=(this.top+o+this.size-(e-1))/t+2;return this instanceof Enemy&&(r=(this.left-o)/t+2,n=(this.left-1+o+this.size)/t+2,h=(this.top+o+this.size)/t+2),{left:r,right:n,top:a,bottom:h}}}class Enemy extends Entity{constructor({board:e,pixelSize:t,left:i,top:s,xp:o}){super({board:e,pixelSize:t,left:i,top:s}),_defineProperty(this,"createHTML",()=>{this.div.className="enemy",this.img.src="./img/enemy.png"}),this.speed/=2,this.direction=getRandomDirection(),this.dead=!1,this.xp=o,this.createHTML()}moveLeft(){super.moveLeft(),this.img.className="enemy-walk-left",this.direction="left"}moveRight(){super.moveRight(),this.img.className="enemy-walk-right",this.direction="right"}moveUp(){super.moveUp(),this.img.className="enemy-walk-up",this.direction="up"}moveDown(){super.moveDown(),this.img.className="enemy-walk-down",this.direction="down"}die(){this.img.className="enemy-die",this.dead=!0,this.timer=new Timer(()=>{this.img.className="enemy-dead",this.div.remove()},1100)}}class Bomberman extends Entity{constructor({board:e,pixelSize:t,liveCount:i}){super({board:e,pixelSize:t}),_defineProperty(this,"initialize",()=>{this.createHTML()}),_defineProperty(this,"createHTML",()=>{this.div.id="bomberman",this.img.src="./img/bomberman.png",this.liveCountDiv=document.createElement("div"),this.liveCountDiv.id="live-count",this.board.append(this.liveCountDiv)}),_defineProperty(this,"restart",()=>{this.left=this.pixelSize,this.top=this.pixelSize}),this.direction="down",this.liveCount=i}moveLeft(){super.moveLeft(),this.img.className="bomberman-walk-left",this.direction="left"}moveRight(){super.moveRight(),this.img.className="bomberman-walk-right",this.direction="right"}moveUp(){super.moveUp(),this.img.className="bomberman-walk-up",this.direction="up"}moveDown(){super.moveDown(),this.img.className="bomberman-walk-down",this.direction="down"}die(){this.img.className="bomberman-die",this.liveCount--,this.timer=new Timer(()=>{this.img.className="bomberman-dead"},600)}}class Block{constructor({board:e,x:t,y:i}){_defineProperty(this,"createHTML",()=>{this.div=document.createElement("div"),this.div.style.gridColumnStart=String(this.x),this.div.style.gridRowStart=String(this.y),this.board.append(this.div)}),_defineProperty(this,"initialize",()=>{this.createHTML()}),this.board=e,this.x=t,this.y=i,this.initialize()}}class Rock extends Block{constructor({board:e,x:t,y:i}){super({board:e,x:t,y:i}),_defineProperty(this,"addClass",()=>{this.div.classList.add("rock")}),this.addClass()}}class ExitDoor extends Block{constructor({board:e,x:t,y:i}){super({board:e,x:t,y:i}),_defineProperty(this,"addClass",()=>{this.div.classList.add("exit-door")}),this.addClass()}}class Wall extends Block{constructor({board:e,x:t,y:i}){super({board:e,x:t,y:i}),_defineProperty(this,"addClass",()=>{this.div.classList.add("wall")}),_defineProperty(this,"addImage",()=>{this.addClass(),this.img=document.createElement("img"),this.img.src="./img/wall.png",this.div.append(this.img)}),this.addImage()}explode(){this.img.classList.add("wall-explode")}}class Bomb{constructor({board:e,x:t,y:i,explosionSize:s,map:o}){_defineProperty(this,"initialize",()=>{this.createHTML(),this.explodeAfter()}),_defineProperty(this,"createHTML",()=>{this.div=document.createElement("div"),this.img=document.createElement("img"),this.div.classList.add("bomb"),this.div.style.gridColumnStart=String(this.x),this.div.style.gridRowStart=String(this.y),this.img.classList.add("bomb-exploding"),this.img.src="./img/bomb.png",this.div.append(this.img),this.board.append(this.div)}),_defineProperty(this,"createExplosions",()=>{this.div.remove(),this.explosion=new Explosion({board:this.board,x:this.x,y:this.y,size:this.explosionSize,map:this.map}),playExplosionSound()}),_defineProperty(this,"explodeAfter",()=>{this.timer=new Timer(()=>{this.createExplosions(),this.map.deleteBomb(this.x,this.y)},this.map.options.explosionTime)}),this.board=e,this.x=t,this.y=i,this.explosionSize=s,this.map=o,this.initialize()}}class Explosion{constructor({board:e,x:t,y:i,size:s,map:o}){_defineProperty(this,"createHTMLForOne",(e,t,i)=>{const s=document.createElement("div"),o=document.createElement("img");return s.classList.add("explosion"),o.classList.add(i),o.src="./img/explosion.png",s.style.gridColumnStart=String(e),s.style.gridRowStart=String(t),s.append(o),this.board.append(s),s}),_defineProperty(this,"create",(e,t,i)=>{let s,o=!0;if("explosion-center"!==i&&this.map.isBomb(e,t)){this.map.getBomb(e,t).instant=!0,o=!1}else if(this.map.isBlock(e,t,!0))if(this.map.isWall(e,t)){this.map.getWall(e,t).explode(),new Timer(()=>{this.map.deleteWall(e,t)},500),o=!1}else this.map.isRock(e,t)&&(o=!1);else s=this.createHTMLForOne(e,t,i),this.map.explosions.push(s),new Timer(()=>{this.map.deleteExplosion(s)},500),o=!0;return{created:o,data:s}}),_defineProperty(this,"createCenter",()=>{const{data:e}=this.create(this.x,this.y,"explosion-center");this.arr.push(e)}),_defineProperty(this,"createLeft",()=>{const{data:e}=this.create(this.x-this.size,this.y,"explosion-left");this.arr.push(e)}),_defineProperty(this,"createRight",()=>{const{data:e}=this.create(this.x+this.size,this.y,"explosion-right");this.arr.push(e)}),_defineProperty(this,"createTop",()=>{const{data:e}=this.create(this.x,this.y-this.size,"explosion-top");this.arr.push(e)}),_defineProperty(this,"createBottom",()=>{const{data:e}=this.create(this.x,this.y+this.size,"explosion-bottom");this.arr.push(e)}),_defineProperty(this,"createLeftHorizontals",()=>{for(let e=this.x-1;e>=this.x-this.size+1;e--){const{created:t,data:i}=this.create(e,this.y,"explosion-horizontal");if(!t)return!1;this.arr.push(i)}return!0}),_defineProperty(this,"createRightHorizontals",()=>{for(let e=this.x+1;e<this.x+this.size;e++){const{created:t,data:i}=this.create(e,this.y,"explosion-horizontal");if(!t)return!1;this.arr.push(i)}return!0}),_defineProperty(this,"createTopVerticals",()=>{for(let e=this.y-1;e>=this.y-this.size+1;e--){const{created:t,data:i}=this.create(this.x,e,"explosion-vertical");if(!t)return!1;this.arr.push(i)}return!0}),_defineProperty(this,"createBottomVerticals",()=>{for(let e=this.y+1;e<this.y+this.size;e++){const{created:t,data:i}=this.create(this.x,e,"explosion-vertical");if(!t)return!1;this.arr.push(i)}return!0}),_defineProperty(this,"createHTML",()=>{this.createCenter(),this.createLeftHorizontals()&&this.createLeft(),this.createRightHorizontals()&&this.createRight(),this.createTopVerticals()&&this.createTop(),this.createBottomVerticals()&&this.createBottom()}),this.board=e,this.x=t,this.y=i,this.size=s,this.map=o,this.arr=[],this.createHTML()}}class KeyListener{constructor(){_defineProperty(this,"initialize",()=>{document.addEventListener("keydown",e=>{this.keysPressed[e.code]=!0}),document.addEventListener("keyup",e=>{this.keysPressed[e.code]=!1})}),_defineProperty(this,"isPressed",e=>this.keysPressed[e]),this.keysPressed={},this.initialize()}}class GameOptions{constructor({rows:e,columns:t,pixelSize:i,tileSize:s,enemyCount:o,bombCount:r,explosionTime:n,explosionSize:a,chainExplosionTime:h,roundTime:m}){_defineProperty(this,"initialize",()=>{this.initializeTimer(),this.initializeScore()}),_defineProperty(this,"draw",()=>{this.drawTimer(),this.drawScore()}),_defineProperty(this,"drawScore",()=>{this.scoreDiv.innerText=`SCORE:${this.score}`}),_defineProperty(this,"drawTimer",()=>{this.timer.innerText=`TIME:${this.roundTime}`}),_defineProperty(this,"initializeTimer",()=>{this.timer=document.createElement("div"),this.timer.id="timer",document.querySelector("#board").append(this.timer)}),_defineProperty(this,"initializeScore",()=>{this.scoreDiv=document.createElement("div"),this.scoreDiv.id="score",document.querySelector("#board").append(this.scoreDiv)}),_defineProperty(this,"initializeTimerChange",()=>{this.resetRoundTime(),clearInterval(this.interval),this.interval=setInterval(()=>{this.roundTime--,this.passedTime++,this.roundTime<=0&&clearInterval(this.interval)},1e3)}),_defineProperty(this,"resetRoundTime",()=>{this.roundTime+=this.passedTime,this.passedTime=0}),this.rows=e,this.columns=t,this.pixelSize=i,this.tileSize=s,this.enemyCount=o,this.bombCount=r,this.explosionTime=n,this.explosionSize=a,this.chainExplosionTime=h,this.roundTime=m,this.passedTime=0,this.score=0,this.initialize()}}class GameMap{constructor({rows:e,columns:t,pixelSize:i,tileSize:s,enemyCount:o,bombCount:r,explosionTime:n,explosionSize:a,chainExplosionTime:h,roundTime:m}){_defineProperty(this,"removeAllDivs",()=>{this.rocks=[],this.walls=[],this.enemies=[],this.bombs=[],this.explosions=[],document.querySelectorAll(".rock").forEach(e=>e.remove()),document.querySelectorAll(".wall").forEach(e=>e.remove()),document.querySelectorAll(".enemy").forEach(e=>e.remove()),document.querySelectorAll(".bomb").forEach(e=>e.remove()),document.querySelectorAll(".explosion").forEach(e=>e.remove()),this.exitDoor.div.remove()}),_defineProperty(this,"restart",()=>{this.options.bombCount=this.bombCount,this.removeAllDivs(),this.createHTML()}),_defineProperty(this,"createRocks",()=>{for(let e=1;e<=this.options.columns;e++)this.rocks.push(new Rock({x:e,y:1,board:this.board})),this.rocks.push(new Rock({x:e,y:this.options.rows,board:this.board}));for(let e=2;e<this.options.rows;e++)this.rocks.push(new Rock({x:1,y:e,board:this.board})),this.rocks.push(new Rock({x:this.options.columns,y:e,board:this.board}));for(let e=3;e<this.options.columns;e+=2)for(let t=3;t<this.options.rows;t+=2)this.rocks.push(new Rock({x:e,y:t,board:this.board}))}),_defineProperty(this,"createWalls",()=>{const e=Math.round(this.options.rows*this.options.columns/8),t=getRandomInt(.9*e,1.1*e);let i=0;for(;i<t;){const e=getRandomInt(1,this.options.columns),t=getRandomInt(1,this.options.rows);this.isBlock(e,t)||e<=3&&t<=3||(this.walls.push(new Wall({x:e,y:t,board:this.board})),i++)}}),_defineProperty(this,"createExitDoor",()=>{for(;;){const e=getRandomInt(1,this.options.columns),t=getRandomInt(1,this.options.rows);if(this.isWall(e,t))return void(this.exitDoor=new ExitDoor({board:this.board,x:e,y:t}))}}),_defineProperty(this,"createEnemies",()=>{let e=0;for(;e<this.options.enemyCount;){const t=getRandomInt(1,this.options.columns),i=getRandomInt(1,this.options.rows);if(!(this.isBlock(t,i)||t<=5&&i<=5)){const s=this.options.tileSize*(t-2),o=this.options.tileSize*(i-2);this.enemies.push(new Enemy({left:s,top:o,board:this.board,pixelSize:this.options.pixelSize,xp:100})),e++}}}),_defineProperty(this,"createHTML",()=>{this.createRocks(),this.createWalls(),this.createExitDoor(),this.createEnemies()}),_defineProperty(this,"addStyles",()=>{const e=document.createElement("style");e.innerHTML=`\n\t\t\t#board {\n\t\t\t\tgrid-template-rows: repeat(${this.options.rows}, ${this.options.tileSize}px);\n\t\t\t\tgrid-template-columns: repeat(${this.options.columns}, ${this.options.tileSize}px);\n\t\t\t}`,document.querySelector("head").append(e),this.board.style.width=`${this.options.tileSize*this.options.columns}px`,this.board.style.height=`${this.options.tileSize*this.options.rows}px`}),_defineProperty(this,"initialize",()=>{this.createHTML(),this.addStyles()}),_defineProperty(this,"isRock",(e,t)=>this.rocks.some(i=>i.x===e&&i.y===t)),_defineProperty(this,"isWall",(e,t)=>this.walls.some(i=>i.x===e&&i.y===t)),_defineProperty(this,"isBomb",(e,t)=>this.bombs.some(i=>i.x===e&&i.y===t)),_defineProperty(this,"isExplosion",(e,t)=>(e=Math.floor(e),t=Math.floor(t),this.explosions.some(i=>parseInt(i.style.gridColumnStart)===e&&parseInt(i.style.gridRowStart)===t))),_defineProperty(this,"isBlock",(e,t,i=!1)=>(e=Math.floor(e),t=Math.floor(t),e<1||t<1||e>this.options.columns||t>this.options.rows||this.isRock(e,t)||this.isWall(e,t)||!i&&this.isBomb(e,t))),_defineProperty(this,"isExitDoor",(e,t)=>(e=Math.floor(e),t=Math.floor(t),parseInt(this.exitDoor.div.style.gridColumnStart)===e&&parseInt(this.exitDoor.div.style.gridRowStart)===t)),_defineProperty(this,"getWall",(e,t)=>this.walls.filter(i=>i.x===e&&i.y===t)[0]),_defineProperty(this,"getBomb",(e,t)=>this.bombs.filter(i=>i.x===e&&i.y===t)[0]),_defineProperty(this,"deleteWall",(e,t)=>{this.walls=this.walls.filter(i=>i.x!==e||i.y!==t||(i.div.remove(),!1))}),_defineProperty(this,"deleteBomb",(e,t)=>{this.bombs=this.bombs.filter(i=>i.x!==e||i.y!==t||(i.div.remove(),clearTimeout(i.timeout),!1)),this.options.bombCount++}),_defineProperty(this,"deleteExplosion",e=>{this.explosions=this.explosions.filter(t=>!(t.style.gridRowStart===e.style.gridRowStart&&t.style.gridColumnStart===e.style.gridColumnStart)),e.remove()}),_defineProperty(this,"deleteEnemy",e=>{this.enemies=this.enemies.filter(t=>t!==e)}),_defineProperty(this,"addBomb",e=>{this.bombs.push(e),this.options.bombCount--}),this.board=document.querySelector("#board"),this.bombCount=r,this.options=new GameOptions({rows:e,columns:t,pixelSize:i,tileSize:s,enemyCount:o,bombCount:r,explosionSize:a,explosionTime:n,chainExplosionTime:h,roundTime:m}),this.rocks=[],this.walls=[],this.enemies=[],this.bombs=[],this.explosions=[]}}class GameMenu{constructor(){_defineProperty(this,"show",()=>{this.selected=0,this.div.className="game-menu-show",document.addEventListener("keyup",this.listener)}),_defineProperty(this,"hide",()=>{this.div.className="game-menu-hide",document.removeEventListener("keyup",this.listener)}),_defineProperty(this,"draw",()=>{this.items.forEach((e,t)=>{e.className="game-menu-item",this.selected===t&&e.classList.add("game-menu-item-selected")})}),_defineProperty(this,"listener",e=>{"ArrowDown"===e.code?this.selected=(this.selected+1)%this.items.length:"ArrowUp"===e.code&&(this.selected=(this.selected-1)%this.items.length,this.selected<0&&(this.selected=this.items.length-1))}),this.div=document.querySelector("#game-menu"),this.items=document.querySelectorAll(".game-menu-item"),this.selected=0}}class Music{constructor(e){_defineProperty(this,"play",()=>{this.audio.play().then()}),_defineProperty(this,"pause",()=>{this.audio.pause()}),_defineProperty(this,"clear",()=>{this.audio.currentTime=0}),_defineProperty(this,"stop",()=>{this.pause(),this.clear()}),_defineProperty(this,"durationMS",()=>1e3*this.audio.duration),this.audio=document.getElementById(e),this.audio.volume=.03}}class GameMusic{constructor(){_defineProperty(this,"stopStageMusic",()=>{this.stage.stop(),this.findExit.stop()}),this.titleScreen=new Music("title-screen-music"),this.stageStart=new Music("stage-start-music"),this.stage=new Music("stage-music"),this.lifeLost=new Music("life-lost-music"),this.ending=new Music("ending-music"),this.over=new Music("over-music"),this.complete=new Music("stage-complete-music"),this.findExit=new Music("find-exit-music"),this.pause=new Music("pause-music"),this.die=new Music("die-music")}}class Screen{constructor(e){_defineProperty(this,"hide",()=>{this.div.style.opacity="0"}),_defineProperty(this,"show",()=>{this.div.style.opacity="1"}),_defineProperty(this,"hideDisplay",()=>{this.div.style.display="none"}),_defineProperty(this,"showDisplay",()=>{this.div.style.display="flex"}),this.div=document.querySelector(`#${e}`),this.hide()}}class GameScreen{constructor(){this.mainMenu=new Screen("main-menu"),this.mainMenu.show(),this.stageStart=new Screen("stage-start"),this.gameOver=new Screen("game-over"),this.gameOver.show(),this.gameOver.hideDisplay(),this.stage=new Screen("board"),this.ending=new Screen("ending"),this.ending.show(),this.ending.hideDisplay()}}class Game{constructor({rows:e=13,columns:t=31,pixelSize:i=3,enemyCount:s=7,explosionTime:o=2e3,explosionSize:r=1,bombCount:n=1,liveCount:a=3,chainExplosionTime:h=100,roundTime:m=200}={}){_defineProperty(this,"handleUserInteraction",()=>{const e=()=>{this.music=new GameMusic,this.state="pre-main-menu",document.querySelector("#click-me").remove(),document.removeEventListener("click",e)};document.addEventListener("click",e)}),_defineProperty(this,"isBombermanCollidedWithExitDoor",()=>{const{left:e,right:t,top:i,bottom:s}=this.bomberman.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!0,collideWithDoor:!0});return this.map.isExitDoor(e,i)||this.map.isExitDoor(e,s)||this.map.isExitDoor(t,i)||this.map.isExitDoor(t,s)}),_defineProperty(this,"updateEnemies",()=>{this.map.enemies.forEach(e=>{this.updateEnemy(e)})}),_defineProperty(this,"updateEnemy",e=>{this.handleEnemyExplosion(e),this.moveEnemyRandomly(e)}),_defineProperty(this,"updateInstantBombs",()=>{this.map.bombs.forEach(e=>{e.instant&&(e.instant=!1,e.timer.clear(),e.timer=new Timer(()=>{e.createExplosions(),this.map.deleteBomb(e.x,e.y)},this.map.options.chainExplosionTime),playExplosionSound())})}),_defineProperty(this,"updateBombs",()=>{if(this.keyListener.isPressed("Space")&&this.map.options.bombCount){const e=Math.floor((this.bomberman.left-1+this.map.options.tileSize/2)/this.map.options.tileSize+2),t=Math.floor((this.bomberman.top-1+this.map.options.tileSize/2)/this.map.options.tileSize+2);if(!this.map.isBomb(e,t)){const i=new Bomb({board:this.map.board,x:e,y:t,explosionSize:this.map.options.explosionSize,map:this.map});this.map.addBomb(i),playBombLeaveSound()}}this.updateInstantBombs()}),_defineProperty(this,"drawEnemies",()=>{this.map.enemies.forEach(e=>{e.draw()})}),_defineProperty(this,"draw",()=>{this.bomberman.draw(),this.bomberman.liveCountDiv.innerText=`LIVES:${this.bomberman.liveCount}`,this.drawEnemies(),this.map.options.draw()}),_defineProperty(this,"initialize",()=>{this.screen.mainMenu.hideDisplay(),this.map.initialize(),this.bomberman.initialize(),this.addPauseHandler()}),_defineProperty(this,"addPauseHandler",()=>{document.addEventListener("keyup",e=>{"Escape"===e.code&&("stage"===this.state?this.state="pre-pause":"pause"===this.state&&(this.state="pre-pre-resume"))})}),_defineProperty(this,"pauseBomberman",()=>{this.bomberman.timer&&this.bomberman.timer.pause(),this.bomberman.img.className=`bomberman-look-${this.bomberman.direction}`}),_defineProperty(this,"resumeBomberman",()=>{this.bomberman.timer&&this.bomberman.timer.resume()}),_defineProperty(this,"pauseEnemies",()=>{this.map.enemies.forEach(e=>{e.img.className=`enemy-look-${e.direction}`,e.timer&&e.timer.pause()})}),_defineProperty(this,"resumeEnemies",()=>{this.map.enemies.forEach(e=>{e.timer&&e.timer.resume()})}),_defineProperty(this,"pauseBombs",()=>{this.map.bombs.forEach(e=>{e.timer&&e.timer.pause(),e.img.className="bomb-paused"})}),_defineProperty(this,"resumeBombs",()=>{this.map.bombs.forEach(e=>{e.timer&&e.timer.resume(),e.img.className="bomb-exploding"})}),_defineProperty(this,"restart",()=>{this.map.restart(),this.bomberman.restart()}),_defineProperty(this,"gameMenuListener",e=>{"Enter"===e.code&&(0===this.gameMenu.selected?this.state="pre-pre-resume":1===this.gameMenu.selected?(this.restart(),this.state="pre-pre-resume"):2===this.gameMenu.selected&&location.reload())}),_defineProperty(this,"pause",()=>{this.pauseBomberman(),this.pauseEnemies(),this.pauseBombs(),document.addEventListener("keyup",this.gameMenuListener),this.gameMenu.show()}),_defineProperty(this,"resume",()=>{this.resumeBomberman(),this.resumeEnemies(),this.resumeBombs(),document.removeEventListener("keyup",this.gameMenuListener),this.gameMenu.hide()}),this.map=new GameMap({rows:e,columns:t,pixelSize:i,tileSize:16*i,enemyCount:s,bombCount:n,explosionTime:o,explosionSize:r,chainExplosionTime:h,roundTime:m}),this.bomberman=new Bomberman({board:this.map.board,pixelSize:i,liveCount:a}),this.keyListener=new KeyListener,this.gameMenu=new GameMenu,this.screen=new GameScreen,this.state="click-me",this.handleUserInteraction()}isBombermanCollidedWithEnemies(){const{left:e,right:t,top:i,bottom:s}=this.bomberman.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!0});for(let o of this.map.enemies){const{left:r,right:n,top:a,bottom:h}=o.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!0});if(!(i>h||t<r||e>n||s<a))return!0}}isBombermanExploded(){const{left:e,right:t,top:i,bottom:s}=this.bomberman.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!0});return this.map.isExplosion(e,i)||this.map.isExplosion(e,s)||this.map.isExplosion(t,i)||this.map.isExplosion(t,s)}handleBombermanDeath(){this.bomberman.die(),this.state="pre-pre-die"}updateBomberman(){if(this.isBombermanCollidedWithEnemies())return void this.handleBombermanDeath();if(this.isBombermanExploded())return void this.handleBombermanDeath();if(!this.map.enemies.length&&this.isBombermanCollidedWithExitDoor())return void(this.state="won");const{left:e,right:t,top:i,bottom:s}=this.bomberman.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!1});let o=!1;this.keyListener.isPressed("KeyA")&&!this.keyListener.isPressed("KeyD")&&(this.map.isBlock(e,i+.05,!0)||this.map.isBlock(e,s-.05,!0)||(this.bomberman.moveLeft(),o=!0)),this.keyListener.isPressed("KeyD")&&!this.keyListener.isPressed("KeyA")&&(this.map.isBlock(t,i+.05,!0)||this.map.isBlock(t,s-.05,!0)||(this.bomberman.moveRight(),o=!0)),this.keyListener.isPressed("KeyW")&&!this.keyListener.isPressed("KeyS")&&(this.map.isBlock(e+.05,i,!0)||this.map.isBlock(t-.05,i,!0)||(this.bomberman.moveUp(),o=!0)),this.keyListener.isPressed("KeyS")&&!this.keyListener.isPressed("KeyW")&&(this.map.isBlock(e+.05,s,!0)||this.map.isBlock(t-.05,s,!0)||(this.bomberman.moveDown(),o=!0)),o||(this.bomberman.img.className=`bomberman-look-${this.bomberman.direction}`)}handleEnemyExplosion(e){const{left:t,right:i,top:s,bottom:o}=e.getBorders(this.map.options.pixelSize,this.map.options.tileSize);(this.map.isExplosion(t,s)||this.map.isExplosion(t,o)||this.map.isExplosion(i,s)||this.map.isExplosion(i,o))&&(this.map.deleteEnemy(e),e.die(),this.map.options.score+=e.xp,this.map.enemies.length||(this.state="find-exit"))}moveEnemyRandomly(e){if(!e.dead){const{left:t,right:i,top:s,bottom:o}=e.getBorders(this.map.options.pixelSize,this.map.options.tileSize,{own:!0});if("left"===e.direction)return void(this.map.isBlock(t,s+.05)||this.map.isBlock(t,o-.05)?e.direction=getRandomDirection(["right","up","down"]):e.moveLeft());if("right"===e.direction)return void(this.map.isBlock(i,s+.05)||this.map.isBlock(i,o-.05)?e.direction=getRandomDirection(["left","up","down"]):e.moveRight());if("up"===e.direction)return void(this.map.isBlock(t+.05,s)||this.map.isBlock(i-.05,s)?e.direction=getRandomDirection(["left","right","down"]):e.moveUp());"down"===e.direction&&(this.map.isBlock(t+.05,o)||this.map.isBlock(i-.05,o)?e.direction=getRandomDirection(["left","right","up"]):e.moveDown())}}update(){this.updateBombs(),this.updateBomberman(),this.updateEnemies(),0===this.map.options.roundTime&&(this.handleBombermanDeath(),this.state="pre-pre-die")}run(){let e=0;const t=i=>{requestAnimationFrame(t),"pre-main-menu"===this.state?(this.screen.mainMenu.showDisplay(),this.music.titleScreen.play(),this.state="main-menu"):"main-menu"===this.state&&this.keyListener.isPressed("Enter")?(this.state="initialize",this.music.titleScreen.stop()):"initialize"===this.state?(this.screen.stage.hide(),this.initialize(),this.state="pre-stage-start"):"pre-stage-start"===this.state?(this.screen.stageStart.show(),this.screen.stage.hide(),this.state="stage-start",this.music.stageStart.play(),e=i):"stage-start"===this.state?i-e>=this.music.stageStart.durationMS()&&(this.screen.stageStart.hide(),this.screen.stage.show(),this.state="pre-stage"):"pre-stage"===this.state?(this.screen.stage.show(),this.music.stage.play(),this.map.options.initializeTimerChange(),this.state="stage"):"stage"===this.state?(e=i,this.update(),this.draw()):"pre-pause"===this.state?(this.music.stopStageMusic(),this.music.pause.stop(),this.music.pause.play(),this.pause(),this.state="pause"):"pause"===this.state?this.gameMenu.draw():"pre-pre-resume"===this.state?(e=i,this.music.pause.clear(),this.state="pre-resume"):"pre-resume"===this.state?(this.music.pause.stop(),this.music.pause.play(),this.gameMenu.hide(),this.state="resume"):"resume"===this.state?i-e>=this.music.pause.durationMS()/2&&(this.resume(),this.state="pre-stage"):"over"===this.state?(this.music.stopStageMusic(),this.music.over.play(),this.screen.stage.hide(),this.screen.gameOver.showDisplay(),this.state="game-over"):"pre-pre-die"===this.state?(this.music.stopStageMusic(),this.pauseEnemies(),this.music.die.play(),this.state="pre-die"):"pre-die"===this.state?i-e>=this.music.die.durationMS()&&(this.music.die.stop(),this.music.lifeLost.play(),this.state="die"):"die"===this.state?i-e>=this.music.die.durationMS()+this.music.lifeLost.durationMS()&&(e=i,this.bomberman.liveCount?(this.state="restart",this.map.options.resetRoundTime()):this.state="over"):"restart"===this.state?(this.restart(),this.state="pre-stage-start"):"find-exit"===this.state?(this.music.stage.stop(),this.music.findExit.play(),this.state="stage"):"won"===this.state?(this.pauseBomberman(),this.music.stopStageMusic(),this.music.complete.play(),i-e>=this.music.complete.durationMS()&&(this.state="ending")):"ending"===this.state&&(this.map.board.remove(),this.music.ending.play(),this.screen.ending.showDisplay(),this.state="END")};requestAnimationFrame(t)}}const game=new Game;game.run();